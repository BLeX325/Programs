#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;
// открываем глобальные файловые потоки
ifstream in("input.txt");
ofstream out("output.txt");
// описание структуры
struct bibl
{
    int number, year;
    string fam, name, secondname, adress, school;
    void show(); // член-функция для вывода информации на экран
    void print(); // член-функция для вывода информации в файл
};

void bibl::show()
{
    cout << setw(8) << number << setw(10) << fam << setw(15) << name << setw(12) << secondname << setw(14) << adress << setw(10) << school << setw(8) << year << endl;
}
void bibl::print()
{
    out << setw(8) << number << setw(10) << fam << setw(15) << name << setw(12) << secondname << setw(14) << adress << setw(10) << school << setw(8) << year << endl;
}

int main()
{
    bibl book[10]; // описываем массив структур
    string num;
    int i, j, n = 0;
    if (!in)
    {
        cout << "Oshibka pri otkritii input.txt" << endl;
    }
    else
    {
        while (in.peek() != EOF) // чтение данных из файла пока не закончится
        {
            in >> book[n].number;
            in >> book[n].fam;
            in >> book[n].name;
            in >> book[n].secondname;
            in >> book[n].adress;
            in >> book[n].school;
            in >> book[n].year;
            // вывод прочитанных данных на экран через член-функцию
            book[n].show();
            n++;
        };
        cout << "Vvedite shkolu" << endl;
        cin >> num;
        if (!out)
        {
            cout << "Oshibka pri otkritii output.txt";
        }
        else
        {
            j = 0;
            for (i = 0; i < n; i++)
            // поиск структуры по совпадению поля
            if (book[i].school != num) //strcmp(a[1],a[0])==0
            {
                // выполняем сдвик в массиве на одну позицию вправо
                for (j = i; j < n-1; j++)
                {
                    book[j] = book[j+1];
                    i--;
                }
                n--; // уменьшаем кол-во книг на 1 после удаления
            }
            // записываем результат в новый файл
            for (i = 0; i < n; i++)
                //вывод данных в файл через член-функцию структуры
                book[i].print();
        }
    }
    in.close();
    out.close(); // закрываем потоки
    return 0;
}
